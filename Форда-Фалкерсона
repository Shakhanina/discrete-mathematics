using System;
using System.Collections.Generic;
public class MaxFlow
{
    static readonly int V = 6; // Количество вершин в графе
    bool bfs(int[,] G1, int s, int t, int[] parent)
    {
        bool[] visited = new bool[V];
        for (int i = 0; i < V; ++i)
        {
            visited[i] = false;
        }
        List<int> queue = new List<int>();
        queue.Add(s);
        visited[s] = true;
        parent[s] = -1;
        while (queue.Count != 0)
        {
            int u = queue[0];
            queue.RemoveAt(0);
            for (int v = 0; v < V; v++)
            {
                if (visited[v] == false && G1[u, v] > 0)
                {
                    queue.Add(v);
                    parent[v] = u;
                    visited[v] = true;
                }
            }
        }
        return (visited[t] == true);
    }
    int fordFulkerson(int[,] graph, int s, int t) 
    {
        int u, v;
        int[,] G1 = new int[V, V];
        for (u = 0; u < V; u++)
        {
            for (v = 0; v < V; v++)
            {
                G1[u, v] = graph[u, v];
            }
        }
        int[] parent = new int[V];
        int max_flow = 0; 
        while (bfs(G1, s, t, parent)) 
        {
            int path_flow = int.MaxValue;
            for (v = t; v != s; v = parent[v])
            {
                u = parent[v];
                path_flow = Math.Min(path_flow, G1[u, v]);
            }
            for (v = t; v != s; v = parent[v])
            {
                u = parent[v];
                G1[u, v] -= path_flow;
                G1[v, u] += path_flow;
            }
            max_flow += path_flow;
        }
        return max_flow;
    }
    public static void Main()
    {
        int[,] G = new int[,] { {0, 16, 13, 0, 0, 0},
                                    {0, 0, 10, 12, 0, 0},
                                    {0, 4, 0, 0, 14, 0},
                                    {0, 0, 9, 0, 0, 20},
                                    {0, 0, 0, 7, 0, 4},
                                    {0, 0, 0, 0, 0, 0}};
        MaxFlow m = new MaxFlow();
        Console.WriteLine(m.fordFulkerson(G, 0, 5));
    }

}
